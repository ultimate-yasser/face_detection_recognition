% مسح المتغيرات وإغلاق النوافذ
clear all;
close all;

% إعداد الكاميرا
try
    cam = webcam; % فتح الكاميرا الافتراضية
    cam.Resolution = '320x240'; % دقة منخفضة لتسريع الأداء
catch
    error('خطأ: لا يمكن الوصول إلى الكاميرا. تأكد من تثبيت Webcam Support Package وتوصيل الكاميرا.');
end

% إعداد نافذة العرض
figure;
axis off;
set(gcf, 'NumberTitle', 'off', 'Name', 'Face Detection - Ovals');
hImg = imshow(zeros(240, 320, 3, 'uint8')); % صورة فارغة كبداية
hold on;

% متغير لحفظ الرسم البيضاوي
hEllipse = [];

% حلقة معالجة الفيديو الحي
while ishandle(hImg)
    % التقاط إطار من الكاميرا
    frame = snapshot(cam);
    
    % تحويل الإطار إلى HSV
    hsv = rgb2hsv(frame);
    hue = hsv(:,:,1);
    saturation = hsv(:,:,2);
    
    % إنشاء قناع لون البشرة
    skin_mask = (hue >= 0.01 & hue <= 0.1) & (saturation >= 0.2 & saturation <= 0.7);
    
    % تحسين القناع
    skin_mask = imopen(skin_mask, strel('disk', 5));
    skin_mask = imclose(skin_mask, strel('disk', 5));
    
    % إيجاد المناطق المتصلة
    cc = bwconncomp(skin_mask);
    stats = regionprops(cc, 'Area', 'BoundingBox');
    
    % اختيار أكبر منطقة فقط (المفروض تكون الوجه)
    max_area = 0;
    selected_bbox = [];
    for i = 1:length(stats)
        if stats(i).Area > max_area
            max_area = stats(i).Area;
            selected_bbox = stats(i).BoundingBox;
        end
    end
    
    % تحديث الصورة في النافذة
    set(hImg, 'CData', frame);
    
    % حذف الرسومات القديمة فقط عند وجود رسم بيضاوي سابق
    if ~isempty(hEllipse)
        delete(hEllipse);
    end
    
    % رسم دائرة بيضاوية واحدة فقط لو تم العثور على منطقة مناسبة
    if ~isempty(selected_bbox)
        x = selected_bbox(1);
        y = selected_bbox(2);
        w = selected_bbox(3);
        h = selected_bbox(4);
        
        center_x = x + w/2;
        center_y = y + h/2;
        radius_x = w/2 * 1.5;
        radius_y = h/2 * 1.6;
        
        % رسم الدائرة البيضاوية
        theta = linspace(0, 2*pi, 40);
        ellipse_x = center_x + radius_x * cos(theta);
        ellipse_y = center_y + radius_y * sin(theta);
        
        % رسم أو تحديث الدائرة البيضاوية
        hEllipse = plot(ellipse_x, ellipse_y, 'r', 'LineWidth', 2);
        
        % عرض عدد الوجوه (في حالتنا = 1 فقط)
        text(10, 20, 'عدد الوجوه: 1', 'Color', 'white', 'FontSize', 10, 'FontWeight', 'bold');
    else
        % لا يوجد وجه
        text(10, 20, 'عدد الوجوه: 0', 'Color', 'white', 'FontSize', 10, 'FontWeight', 'bold');
    end
    
    drawnow;
end

% تنظيف الكاميرا بعد الإغلاق
clear cam;
